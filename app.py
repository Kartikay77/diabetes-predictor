# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P2LOeBr-2Tz59orrnA89tgAvJ8P5AMYY
"""

import streamlit as st
import joblib
import numpy as np

# Load the model
model = joblib.load("xgboost_diabetes_model.pkl")

st.title("Diabetes Prediction System")

# Input form
age = st.number_input("Age", min_value=0, max_value=120, value=30)
bmi = st.number_input("BMI", value=22.5)
hba1c = st.number_input("HbA1c Level", value=5.6)
glucose = st.number_input("Blood Glucose Level", value=100.0)
hypertension = st.selectbox("Hypertension", [0, 1])
heart_disease = st.selectbox("Heart Disease", [0, 1])
gender = st.selectbox("Gender", ["Male", "Female"])
smoking = st.selectbox("Smoking History", ["never", "former", "current", "No Info", "not current", "ever"])

# Encode categorical fields
gender_encoded = 1 if gender == "Male" else 0
smoking_encoded = [0, 0, 0, 0, 0, 0]
smoking_map = {"never": 0, "former": 1, "current": 2, "No Info": 3, "not current": 4, "ever": 5}
smoking_encoded[smoking_map[smoking]] = 1

# Combine into input vector
input_vector = [age, bmi, hba1c, glucose, hypertension, heart_disease, gender_encoded] + smoking_encoded
input_vector = np.array(input_vector).reshape(1, -1)

# Predict
if st.button("Predict"):
    prediction = model.predict(input_vector)[0]
    prob = model.predict_proba(input_vector)[0][1] * 100
    if prediction == 1:
        st.error(f"You are likely diabetic with {prob:.1f}% confidence.")
    else:
        st.success(f"You are not diabetic. Risk is {prob:.1f}%.")